<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bramante&#x27;s Blog]]></title>
  <link href="http://Bramante.github.io/atom.xml" rel="self"/>
  <link href="http://Bramante.github.io/"/>
  <updated>2015-09-09T09:25:51+08:00</updated>
  <id>http://Bramante.github.io/</id>
  <author>
    <name><![CDATA[Bramante]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Expand Macro]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/09/expand-macro/"/>
    <updated>2015-09-09T09:22:22+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/09/expand-macro</id>
    <content type="html"><![CDATA[<p>閱讀別人所寫的程式, 如果遇到複雜的Macro,
不太能確定執行後會有什麼結果時,
可以使用Expand Macro的技巧,
把Macro給展開, 這樣程式應該會變得比較容易了解一點.</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define SUM( a, b ) (a+b)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">2</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">c</span> <span class="p">;</span>
</span><span class='line'> <span class="n">c</span> <span class="o">=</span> <span class="n">SUM</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;c = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>利用gcc的&#8221;-E&#8221;參數, 可以把Macro給展開:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test/Expand_Macro$ gcc -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test/Expand_Macro$ ./test
</span><span class='line'>c = 3
</span><span class='line'>bramante@matrix:~/test/Expand_Macro$ gcc -E ./test.c | grep -A8 "int main(void)"
</span><span class='line'>int main(void)
</span><span class='line'>{
</span><span class='line'> int a = 1 ;
</span><span class='line'> int b = 2 ;
</span><span class='line'> int c ;
</span><span class='line'> c = (a+b);
</span><span class='line'> printf("c = %d\n",c);
</span><span class='line'> return 0 ;
</span><span class='line'>}
</span><span class='line'>bramante@matrix:~/test/Expand_Macro$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Program Hangs On Exit]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/04/program-hangs-on-exit/"/>
    <updated>2015-09-04T23:09:43+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/04/program-hangs-on-exit</id>
    <content type="html"><![CDATA[<p>之前有遇過程式在執行exit()之後, 竟然發生程式hang住, 無法結束執行的狀況.
這個問題罩因於, 在執行exit()時, 會對C++的static/global Object進行de-init,
若C++ class的destructor沒有寫好, 例如卡在destructor裡的永久迴圈, 或是發生了dead lock,
便會造成這個異常的現象, 下面的程式刻意在destructor裡加入永久迴圈,
故意製造hang住的狀態, 重製這樣的bug:</p>

<figure class='code'><figcaption><span>hang.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">char</span><span class="o">*</span> <span class="n">ptr</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">PARENT</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">public</span><span class="o">:</span>
</span><span class='line'>              <span class="n">PARENT</span><span class="p">()</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="o">~</span><span class="n">PARENT</span><span class="p">()</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>               <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                     <span class="n">printf</span><span class="p">(</span><span class="s">&quot;block...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>                     <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="kt">void</span> <span class="n">test</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>               <span class="n">printf</span><span class="p">(</span><span class="s">&quot;test()</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">static</span> <span class="n">PARENT</span> <span class="n">parentObj</span> <span class="p">;</span>
</span><span class='line'> <span class="n">parentObj</span><span class="p">.</span><span class="n">test</span><span class="p">();</span>
</span><span class='line'> <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ g++ -o ./hang ./hang.cpp
</span><span class='line'>bramante@matrix:~/test$ gdb ./hang
</span><span class='line'>GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
</span><span class='line'>and "show warranty" for details.
</span><span class='line'>This GDB was configured as "x86_64-linux-gnu".
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://bugs.launchpad.net/gdb-linaro/&gt;...
</span><span class='line'>Reading symbols from /home/bramante/test/hang...(no debugging symbols found)...done.
</span><span class='line'>(gdb) run
</span><span class='line'>Starting program: /home/bramante/test/hang
</span><span class='line'>test()
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>block...
</span><span class='line'>^C
</span><span class='line'>Program received signal SIGINT, Interrupt.
</span><span class='line'>0x00007ffff77db090 in __nanosleep_nocancel () at ../sysdeps/unix/syscall-template.S:82
</span><span class='line'>82      ../sysdeps/unix/syscall-template.S: No such file or directory.
</span><span class='line'>(gdb) bt
</span><span class='line'>#0  0x00007ffff77db090 in __nanosleep_nocancel () at ../sysdeps/unix/syscall-template.S:82
</span><span class='line'>#1  0x00007ffff77daf4c in __sleep (seconds=0) at ../sysdeps/unix/sysv/linux/sleep.c:138
</span><span class='line'>#2  0x0000000000400770 in PARENT::~PARENT() ()
</span><span class='line'>#3  0x00007ffff77575b1 in __run_exit_handlers (status=0, listp=0x7ffff7ad3688, run_list_atexit=true) at exit.c:78
</span><span class='line'>#4  0x00007ffff7757635 in __GI_exit (status=&lt;optimized out&gt;) at exit.c:100
</span><span class='line'>#5  0x0000000000400746 in main ()
</span><span class='line'>(gdb)</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>從callstack可以看出是main()執行exit()時,
在class PARENT的destructor發生hang住的狀況.</p>

<p>這個bug, 在glibc的callstack看到的是:</p>

<pre><code>__run_exit_handlers()
__GI_exit()
</code></pre>

<p>在bionic libc看到的則是:</p>

<pre><code>__cxa_finalize()
exit()
</code></pre>

<p>不同的libc在這部份的實作上, 似乎有點不一樣.</p>

<p>C++的程式在一跑起來時, 會利用__cxa_atexit()去註冊destructor,
然後在程式結束執行時, 便會去執行這些登記在案的destructor.</p>

<p>work around bug的方法很簡單,
可以把exit()換成kill(getpid(), SIGKILL),
或是把exit()換成_exit(), 讓程式刻意不去執行destructor,
便可以讓hang住不要發生.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Program Crashes On Exit]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/04/program-crashes-on-exit/"/>
    <updated>2015-09-04T23:09:08+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/04/program-crashes-on-exit</id>
    <content type="html"><![CDATA[<p>之前有遇過程式在執行exit()之後, 竟然發生crash的狀況.
這個問題罩因於, 在執行exit()時, 會對C++的static/global Object進行de-init,
若C++ class的destructor沒有寫好, 就會在執行destructor時發生crash,
下面的程式故意在destructor裡製造crash, 重製這樣的bug:</p>

<figure class='code'><figcaption><span>crash.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">char</span><span class="o">*</span> <span class="n">ptr</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">PARENT</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">public</span><span class="o">:</span>
</span><span class='line'>              <span class="n">PARENT</span><span class="p">()</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>               <span class="k">if</span><span class="p">(</span><span class="n">ptr</span><span class="p">)</span>
</span><span class='line'>                 <span class="p">{</span>
</span><span class='line'>                  <span class="n">ptr</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="o">~</span><span class="n">PARENT</span><span class="p">()</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>               <span class="n">free</span><span class="p">(</span><span class="n">ptr</span><span class="p">);</span>
</span><span class='line'>               <span class="n">ptr</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="mh">0xDEADBEEF</span> <span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="kt">void</span> <span class="n">test</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>               <span class="n">printf</span><span class="p">(</span><span class="s">&quot;test()</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">static</span> <span class="n">PARENT</span> <span class="n">parentObj1</span><span class="p">,</span> <span class="n">parentObj2</span> <span class="p">;</span>
</span><span class='line'> <span class="n">parentObj1</span><span class="p">.</span><span class="n">test</span><span class="p">();</span>
</span><span class='line'> <span class="n">parentObj2</span><span class="p">.</span><span class="n">test</span><span class="p">();</span>
</span><span class='line'> <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ g++ -o ./crash ./crash.cpp
</span><span class='line'>bramante@matrix:~/test$ gdb ./crash
</span><span class='line'>GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
</span><span class='line'>and "show warranty" for details.
</span><span class='line'>This GDB was configured as "x86_64-linux-gnu".
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://bugs.launchpad.net/gdb-linaro/&gt;...
</span><span class='line'>Reading symbols from /home/bramante/test/crash...(no debugging symbols found)...done.
</span><span class='line'>(gdb) run
</span><span class='line'>Starting program: /home/bramante/test/crash
</span><span class='line'>test()
</span><span class='line'>test()
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>__GI___libc_free (mem=0xdeadbeef) at malloc.c:2970
</span><span class='line'>2970    malloc.c: No such file or directory.
</span><span class='line'>(gdb) bt
</span><span class='line'>#0  __GI___libc_free (mem=0xdeadbeef) at malloc.c:2970
</span><span class='line'>#1  0x0000000000400831 in PARENT::~PARENT() ()
</span><span class='line'>#2  0x00007ffff77575b1 in __run_exit_handlers (status=0, listp=0x7ffff7ad3688, run_list_atexit=true) at exit.c:78
</span><span class='line'>#3  0x00007ffff7757635 in __GI_exit (status=&lt;optimized out&gt;) at exit.c:100
</span><span class='line'>#4  0x00000000004007ea in main ()
</span><span class='line'>(gdb)</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>從callstack可以看出是main()執行exit()時,
在class PARENT的destructor發生crash.
crash的原因是程式去踩到一個不合法的address 0xDEADBEEF.</p>

<p>這個bug, 在glibc的callstack看到的是:</p>

<pre><code>__run_exit_handlers()
__GI_exit()
</code></pre>

<p>在bionic libc看到的則是:</p>

<pre><code>__cxa_finalize()
exit()
</code></pre>

<p>不同的libc在這部份的實作上, 似乎有點不一樣.</p>

<p>C++的程式在一跑起來時, 會利用__cxa_atexit()去註冊destructor,
然後在程式結束執行時, 便會去執行這些登記在案的destructor.</p>

<p>work around bug的方法很簡單, 如果只是單純要程式結束, 並且不想看到crash的log,
可以把exit()換成kill(getpid(), SIGKILL),
或是把exit()換成_exit(), 讓程式刻意不去執行destructor,
便可以讓crash不要發生.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Direct IO]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/04/direct-io/"/>
    <updated>2015-09-04T23:02:28+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/04/direct-io</id>
    <content type="html"><![CDATA[<p>Direct IO比一般read/write file的方式來得快,
但是它有一些Alignment的規則要遵守,
不然程式會不work, 下面是用Direct IO寫成的一支copy程式:</p>

<figure class='code'><figcaption><span>my_copy.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stddef.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;dirent.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/stat.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;linux/fcntl.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define BLOCK_SIZE 4096</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">fhInput</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">fhOutput</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">len</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">sum</span> <span class="p">;</span>
</span><span class='line'> <span class="k">static</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="n">BLOCK_SIZE</span><span class="p">]</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">aligned</span> <span class="p">(</span><span class="mi">4096</span><span class="p">)))</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span> <span class="n">argc</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">fhInput</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">O_RDONLY</span> <span class="o">|</span> <span class="n">O_DIRECT</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">fhOutput</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">O_WRONLY</span> <span class="o">|</span> <span class="n">O_CREAT</span> <span class="o">|</span> <span class="n">O_TRUNC</span> <span class="o">|</span><span class="n">O_DIRECT</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">((</span><span class="n">fhInput</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">fhOutput</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>       <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[Error] open file fail.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">fhInput</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">close</span><span class="p">(</span><span class="n">fhInput</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[Error] Can not open %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">fhOutput</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">close</span><span class="p">(</span><span class="n">fhOutput</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[Error] Can not open %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>       <span class="k">return</span> <span class="o">-</span><span class="mi">1</span> <span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>     <span class="k">else</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>       <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'>       <span class="k">do</span><span class="p">{</span>
</span><span class='line'>          <span class="n">len</span> <span class="o">=</span> <span class="n">read</span><span class="p">(</span> <span class="n">fhInput</span><span class="p">,</span> <span class="n">buf</span> <span class="p">,</span> <span class="n">BLOCK_SIZE</span> <span class="p">);</span>
</span><span class='line'>          <span class="c1">//printf(&quot;len: %d\n&quot;,len);</span>
</span><span class='line'>          <span class="n">write</span><span class="p">(</span> <span class="n">fhOutput</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">BLOCK_SIZE</span> <span class="p">);</span>
</span><span class='line'>          <span class="n">sum</span> <span class="o">+=</span> <span class="n">BLOCK_SIZE</span> <span class="p">;</span>
</span><span class='line'>         <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">len</span> <span class="o">==</span> <span class="n">BLOCK_SIZE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">len</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">ftruncate</span><span class="p">(</span> <span class="n">fhOutput</span><span class="p">,</span> <span class="n">sum</span> <span class="o">-</span> <span class="n">BLOCK_SIZE</span> <span class="o">+</span> <span class="n">len</span> <span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">struct</span> <span class="n">stat</span> <span class="n">fileAttr</span> <span class="p">;</span>
</span><span class='line'>       <span class="n">fstat</span><span class="p">(</span> <span class="n">fhInput</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">fileAttr</span> <span class="p">);</span>
</span><span class='line'>       <span class="n">fchmod</span><span class="p">(</span> <span class="n">fhOutput</span><span class="p">,</span> <span class="n">fileAttr</span><span class="p">.</span><span class="n">st_mode</span> <span class="p">);</span>
</span><span class='line'>       <span class="n">close</span><span class="p">(</span><span class="n">fhOutput</span><span class="p">);</span>
</span><span class='line'>       <span class="n">close</span><span class="p">(</span><span class="n">fhInput</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[help] ./my_copy ./src_file ./dest_file </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span> <span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gcc -o ./my_copy ./my_copy.c
</span><span class='line'>bramante@matrix:~/test$ which ls
</span><span class='line'>/bin/ls
</span><span class='line'>bramante@matrix:~/test$ ll /bin/ls
</span><span class='line'>-rwxr-xr-x 1 root root 105840 Nov 20  2012 /bin/ls*
</span><span class='line'>bramante@matrix:~/test$ ./my_copy /bin/ls ./ls
</span><span class='line'>bramante@matrix:~/test$ ll | grep ls
</span><span class='line'>-rwxr-xr-x 1 bramante bramante 105840 Sep  4 11:15 ls*
</span><span class='line'>bramante@matrix:~/test$ diff ./ls /bin/ls
</span><span class='line'>bramante@matrix:~/test$
</span><span class='line'>bramante@matrix:~/test$ ./ls -al | grep ls
</span><span class='line'>-rwxr-xr-x 1 bramante bramante 105840 Sep  4 11:15 ls
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>Direct IO 所read/write的byte數, 以及read/write的起點,
還有read()/write()所使用的memory buffer, 應該都要align在512 byte的倍數上,
精確的alignment限制可以參考網路上的說明:</p>

<p><a href="http://people.redhat.com/msnitzer/docs/io-limits.txt">http://people.redhat.com/msnitzer/docs/io-limits.txt</a></p>

<p>gcc有提供attribute, 讓變數可以align在特定的address上, 我只有試過在全域變數上確實有用, 其他的沒試過:</p>

<pre><code>__attribute__(aligned (4096))
</code></pre>

<p>因為在這支程式裡, Direct IO一次read/write 4096 byte,
因此copy出的file會多一截&#8221;尾巴&#8221;, 我用ftruncate()來cut掉它:</p>

<pre><code>ftruncate( fhOutput, sum - BLOCK_SIZE + len );
</code></pre>

<p>為了讓copy出的file的屬性和原本的file相同, 因此我用fstat()與fchmod()複製了檔案屬性:</p>

<pre><code>fstat( fhInput, &amp;fileAttr );
fchmod( fhOutput, fileAttr.st_mode );
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fallocate]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/04/fallocate/"/>
    <updated>2015-09-04T00:10:01+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/04/fallocate</id>
    <content type="html"><![CDATA[<p>fallocate command可以用來快速地建立1個file, 以下是操作範例:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ fallocate -o 0 -l 96 data
</span><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 12
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Sep  4 00:10 ./
</span><span class='line'>drwxr-xr-x 6 bramante bramante 4096 Sep  2 23:36 ../
</span><span class='line'>-rw-r--r-- 1 bramante bramante   96 Sep  4 00:10 data
</span><span class='line'>bramante@matrix:~/test$ hexdump -Cv ./data
</span><span class='line'>00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000040  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000060
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>fallocate command也可以用來擴充file的size, 以下是操作範例:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ dd if=/dev/zero bs=1 count=96 | tr '\000' '\377' &gt; data
</span><span class='line'>96+0 records in
</span><span class='line'>96+0 records out
</span><span class='line'>96 bytes (96 B) copied, 0.000357439 s, 269 kB/s
</span><span class='line'>bramante@matrix:~/test$ hexdump -Cv ./data
</span><span class='line'>00000000  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000010  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000020  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000030  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000040  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000050  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000060
</span><span class='line'>bramante@matrix:~/test$ fallocate -o 80 -l 32 data
</span><span class='line'>bramante@matrix:~/test$ hexdump -Cv ./data
</span><span class='line'>00000000  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000010  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000020  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000030  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000040  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000050  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|
</span><span class='line'>00000060  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>00000070
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>&ldquo;fallocate -o 80 -l 32 data&#8221;的意思是, 從data這個檔案的offset 80 byte的位置開始,
要有32 byte的空間, 由於原本在offset 80之後就有16個byte, 因此檔案最後只擴充了16 byte的size.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download the source code of the Ginga]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/03/download-the-source-code-of-the-ginga/"/>
    <updated>2015-09-03T00:01:01+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/03/download-the-source-code-of-the-ginga</id>
    <content type="html"><![CDATA[<p>Ginga是巴西DTV上的Middleware, 它的source code是open source的, 可以用下面的command把source code給抓回來:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~$ git clone http://git.telemidia.puc-rio.br/ginga.git
</span><span class='line'>Cloning into 'ginga'...
</span><span class='line'>bramante@matrix:~$ cd ginga/
</span><span class='line'>bramante@matrix:~/ginga$ ll
</span><span class='line'>total 184
</span><span class='line'>drwxr-xr-x 25 bramante bramante  4096 Sep  2 23:52 ./
</span><span class='line'>drwxr-xr-x  6 bramante bramante  4096 Sep  2 23:36 ../
</span><span class='line'>-rw-rw-r--  1 bramante bramante    96 Sep  2 23:52 AUTHORS
</span><span class='line'>-rwxrwxr-x  1 bramante bramante   292 Sep  2 23:52 bootstrap*
</span><span class='line'>drwxrwxr-x  2 bramante bramante  4096 Sep  2 23:52 build-aux/
</span><span class='line'>-rw-rw-r--  1 bramante bramante     0 Sep  2 23:52 ChangeLog
</span><span class='line'>drwxrwxr-x  2 bramante bramante  4096 Sep  2 23:52 config/
</span><span class='line'>-rw-rw-r--  1 bramante bramante 17007 Sep  2 23:52 configure.ac
</span><span class='line'>drwxrwxr-x  2 bramante bramante  4096 Sep  2 23:52 contrib/
</span><span class='line'>-rw-rw-r--  1 bramante bramante 18009 Sep  2 23:52 COPYING
</span><span class='line'>drwxrwxr-x  4 bramante bramante  4096 Sep  2 23:52 debian/
</span><span class='line'>drwxrwxr-x  3 bramante bramante  4096 Sep  2 23:52 ginga/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingacc-cm/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingacc-contextmanager/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingacc-dataprocessing/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingacc-ic/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingacc-mb/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingacc-multidevice/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingacc-player/
</span><span class='line'>drwxrwxr-x  4 bramante bramante  4096 Sep  2 23:52 gingacc-system/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingacc-tsparser/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingacc-tuner/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingacc-um/
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 gingalssm/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 gingancl/
</span><span class='line'>drwxrwxr-x  6 bramante bramante  4096 Sep  2 23:52 ginga-vs2010-solution/
</span><span class='line'>drwxrwxr-x  8 bramante bramante  4096 Sep  2 23:52 .git/
</span><span class='line'>-rw-rw-r--  1 bramante bramante  1406 Sep  2 23:52 .gitignore
</span><span class='line'>-rw-rw-r--  1 bramante bramante  9152 Sep  2 23:52 LICENSING
</span><span class='line'>-rw-rw-r--  1 bramante bramante   183 Sep  2 23:52 maint.mk
</span><span class='line'>-rw-rw-r--  1 bramante bramante  2066 Sep  2 23:52 Makefile.am
</span><span class='line'>drwxrwxr-x  4 bramante bramante  4096 Sep  2 23:52 ncl30/
</span><span class='line'>drwxrwxr-x  4 bramante bramante  4096 Sep  2 23:52 ncl30-converter/
</span><span class='line'>-rw-rw-r--  1 bramante bramante     0 Sep  2 23:52 NEWS
</span><span class='line'>-rw-rw-r--  1 bramante bramante   233 Sep  2 23:52 README
</span><span class='line'>-rw-rw-r--  1 bramante bramante  2066 Sep  2 23:52 README.linux
</span><span class='line'>-rw-rw-r--  1 bramante bramante   188 Sep  2 23:52 README.windows
</span><span class='line'>drwxrwxr-x  5 bramante bramante  4096 Sep  2 23:52 telemidia-util/
</span><span class='line'>bramante@matrix:~/ginga$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[secure copy]]></title>
    <link href="http://Bramante.github.io/blog/2015/09/02/secure-copy/"/>
    <updated>2015-09-02T00:00:46+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/09/02/secure-copy</id>
    <content type="html"><![CDATA[<p>在2台Linux電腦之間copy檔案, 使用scp command (secure copy, remote file copy program)
是相當方便的, 以下是使用範例:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal 192.168.1.2</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~$ ll ./test.bin
</span><span class='line'>-rwxr--r-- 1 bramante bramante 72087592 Sep  1 15:46 ./test.bin*
</span><span class='line'>bramante@matrix:~$     
</span><span class='line'>bramante@matrix:~$ scp ./test.bin minions@192.168.1.3:~/
</span><span class='line'>The authenticity of host '192.168.1.3 (192.168.1.3)' can't be established.
</span><span class='line'>ECDSA key fingerprint is a1:3e:45:35:f5:23:e2:f3:56:c8:50:bf:22:05:4b:9b.
</span><span class='line'>Are you sure you want to continue connecting (yes/no)? yes
</span><span class='line'>Warning: Permanently added '192.168.1.3' (ECDSA) to the list of known hosts.
</span><span class='line'>minions@192.168.1.3's password:
</span><span class='line'>test.bin                                                                                                                100%   69MB  11.5MB/s   00:06
</span><span class='line'>bramante@matrix:~$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal 192.168.1.3</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>minions@zion:~$ ll ./test.bin
</span><span class='line'>-rwxr--r-- 1 minions minions 72087592 Sep  1 15:50 ./test.bin*
</span><span class='line'>minions@zion:~$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>scp也有Windows的版本, 所以在Linux電腦與Windows電腦間copy檔案, 也可以使用scp.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nohup]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/27/nohup/"/>
    <updated>2015-08-27T23:58:20+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/27/nohup</id>
    <content type="html"><![CDATA[<p>Build Android的source code很花時間,
如果能利用下班時間來build code是不錯的選擇,
但是下班後Terminal必需保持與Server的連線才能build code嗎?
其實不用, 只要使用nohup這個command在背景執行build code script就可以了.</p>

<p>示範用的script:</p>

<figure class='code'><figcaption><span>test.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">i</span><span class="o">=</span>0
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="o">[</span> <span class="nv">$i</span> -lt <span class="m">50</span> <span class="o">]</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;Do something.... $i&quot;</span>
</span><span class='line'>  <span class="nv">i</span><span class="o">=</span><span class="k">$(</span> expr <span class="nv">$i</span> + <span class="m">1</span> <span class="k">)</span>
</span><span class='line'>  sleep 1
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;done.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>用nohup在背景執行test.sh, 然後登出Server:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 12
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Aug 28 00:16 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante 4096 Aug 20 09:29 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  121 Aug 28 00:10 test.sh
</span><span class='line'>bramante@matrix:~/test$ chmod a+x test.sh
</span><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 12
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Aug 28 00:16 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante 4096 Aug 20 09:29 ../
</span><span class='line'>-rwxrwxr-x 1 bramante bramante  121 Aug 28 00:10 test.sh*
</span><span class='line'>bramante@matrix:~/test$ nohup ./test.sh &
</span><span class='line'>[1] 3214
</span><span class='line'>bramante@matrix:~/test$ nohup: ignoring input and appending output to `nohup.out'
</span><span class='line'>
</span><span class='line'>bramante@matrix:~/test$ exit</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>之後再次登入Server時, 可以用&#8221;tail -f ./nohup.out&#8221;查看build code log,
看看是否有執行到&#8221;done&#8221;, 把script完整的跑完:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~$ cd test/
</span><span class='line'>bramante@matrix:~/test$ tail -f ./nohup.out
</span><span class='line'>Do something.... 22
</span><span class='line'>Do something.... 23
</span><span class='line'>Do something.... 24
</span><span class='line'>Do something.... 25
</span><span class='line'>Do something.... 26
</span><span class='line'>Do something.... 27
</span><span class='line'>Do something.... 28
</span><span class='line'>Do something.... 29
</span><span class='line'>Do something.... 30
</span><span class='line'>Do something.... 31
</span><span class='line'>Do something.... 32
</span><span class='line'>Do something.... 33
</span><span class='line'>Do something.... 34
</span><span class='line'>Do something.... 35
</span><span class='line'>Do something.... 36
</span><span class='line'>Do something.... 37
</span><span class='line'>Do something.... 38
</span><span class='line'>Do something.... 39
</span><span class='line'>Do something.... 40
</span><span class='line'>Do something.... 41
</span><span class='line'>Do something.... 42
</span><span class='line'>Do something.... 43
</span><span class='line'>Do something.... 44
</span><span class='line'>Do something.... 45
</span><span class='line'>Do something.... 46
</span><span class='line'>Do something.... 47
</span><span class='line'>Do something.... 48
</span><span class='line'>Do something.... 49
</span><span class='line'>done.
</span><span class='line'>^C
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>有看到&#8221;done&#8221;, test.sh最後有完整的跑完.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lsof]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/27/lsof/"/>
    <updated>2015-08-27T23:18:13+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/27/lsof</id>
    <content type="html"><![CDATA[<p>lsof是個相當實用的command,
可以用它來查出是哪支程式在access file.</p>

<p>以下是用lsof找出是哪支程式正在access test.c這個file的範例:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span> <span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span> <span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">FILE</span> <span class="o">*</span><span class="n">fh</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>  <span class="s">&quot;rb&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span>
</span><span class='line'>     <span class="p">{</span>
</span><span class='line'>      <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>           <span class="p">{</span>
</span><span class='line'>            <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>      <span class="n">fclose</span><span class="p">(</span><span class="n">fh</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 12
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Aug 27 23:23 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante 4096 Aug 20 09:29 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  264 Aug 27 23:23 test.c
</span><span class='line'>bramante@matrix:~/test$ gcc -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ ./test ./test.c &
</span><span class='line'>[1] 2874
</span><span class='line'>bramante@matrix:~/test$ lsof | grep test.c
</span><span class='line'>test      2874   bramante    3r      REG  252,0      264 259119 /home/bramante/test/test.c
</span><span class='line'>bramante@matrix:~/test$ kill -9 2874
</span><span class='line'>[1]+  Killed                  ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ lsof | grep test.c
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>lsof可以找出是test這支程式在access test.c這個file,
砍掉test這支程式之後,
lsof也能反應出已經沒有程式在access test.c這個file的變化.</p>

<p>Android系統因為有程式在access USB Disk上的檔案而無法Eject Disk時,
該怎麼辦? 這時可以用&#8221;lsof | grep sda1&#8221;, 來找出正在access USB Disk的process,
然後用&#8221;kill -9 PID&#8221;把這些process給砍掉, 接下來就可以順利Eject Disk了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP Redirect]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/27/http-redirect/"/>
    <updated>2015-08-27T00:23:32+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/27/http-redirect</id>
    <content type="html"><![CDATA[<p>我的NAS之前改成NAS裡的每個帳號都可以有自己的web page之後,
就一直沒特別去處理NAS的home page,
以至於連到home page時,
畫面上什麼也沒有,
目前索性把它redirect到github pages的blog,
修改方法很簡單, 只要把.htaccess修改如下就可以了:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DiskStation&gt; cat /volume1/web/.htaccess
</span><span class='line'>
</span><span class='line'># BEGIN WordPress
</span><span class='line'>RewriteEngine On
</span><span class='line'>RewriteCond %{HTTPS} off
</span><span class='line'>RewriteRule index.htm https://bramante.github.io/
</span><span class='line'># END WordPress
</span><span class='line'>DiskStation&gt;</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extract Audio From a Video Using FFmpeg]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/26/extract-audio-from-a-video-using-ffmpeg/"/>
    <updated>2015-08-26T00:02:31+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/26/extract-audio-from-a-video-using-ffmpeg</id>
    <content type="html"><![CDATA[<p>使用FFmpeg可以很容易地把Audio由TS file裡頭給分離出來,
如果Audio是使用MPEG Audio來Encode的,
那麼把分離出的Audio另存成*.mp3的file,
就可以直接用一般的軟體來播放.</p>

<p>以下是操作範例:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test/audio$ ll
</span><span class='line'>total 10592
</span><span class='line'>drwxrwxr-x 2 bramante bramante     4096 Aug 24 17:52 ./
</span><span class='line'>drwxrwxr-x 4 bramante bramante     4096 Aug 24 17:51 ../
</span><span class='line'>-rwxrw-rw- 1 bramante bramante 10834252 Aug 24 17:25 demo.ts*
</span><span class='line'>bramante@matrix:~/test/audio$ ffmpeg -i demo.ts -acodec copy demo.mp3
</span><span class='line'>ffmpeg version 0.8.17-4:0.8.17-0ubuntu0.12.04.1, Copyright (c) 2000-2014 the Libav developers
</span><span class='line'>  built on Mar 16 2015 13:26:50 with gcc 4.6.3
</span><span class='line'>The ffmpeg program is only provided for script compatibility and will be removed
</span><span class='line'>in a future release. It has been deprecated in the Libav project to allow for
</span><span class='line'>incompatible command line syntax improvements in its replacement called avconv
</span><span class='line'>(see Changelog for details). Please use avconv instead.
</span><span class='line'>[mp3 @ 0x86dd60] Header missing
</span><span class='line'>[mpegts @ 0x8337a0] max_analyze_duration reached
</span><span class='line'>[NULL @ 0x878c40] start time is not set in estimate_timings_from_pts
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 18 expected 9 got 7
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 1601 expected 13 got 2
</span><span class='line'>Input #0, mpegts, from 'demo.ts':
</span><span class='line'>  Duration: 26:30:41.26, start: 50944.346833, bitrate: 0 kb/s
</span><span class='line'>  Program 25664
</span><span class='line'>  Program 25728
</span><span class='line'>  Program 25792
</span><span class='line'>  Program 25856
</span><span class='line'>  Program 25920
</span><span class='line'>  Program 26240
</span><span class='line'>  Program 26368
</span><span class='line'>  Program 26560
</span><span class='line'>  Program 27136
</span><span class='line'>  Program 27168
</span><span class='line'>  Program 27360
</span><span class='line'>  Program 27456
</span><span class='line'>  Program 27520
</span><span class='line'>  Program 27584
</span><span class='line'>  Program 27648
</span><span class='line'>  Program 27680
</span><span class='line'>  Program 27712
</span><span class='line'>  Program 27744
</span><span class='line'>  Program 27840
</span><span class='line'>  Program 27872
</span><span class='line'>  Program 27904
</span><span class='line'>  Program 28032
</span><span class='line'>  Program 28096
</span><span class='line'>  Program 28160
</span><span class='line'>    Stream #0.0[0x641](eng): Audio: mp2, 48000 Hz, mono, s16, 64 kb/s
</span><span class='line'>    Stream #0.1[0x642]: Data: [11][0][0][0] / 0x000B
</span><span class='line'>  Program 28288
</span><span class='line'>  Program 28320
</span><span class='line'>  Program 28352
</span><span class='line'>  Program 28384
</span><span class='line'>  Program 28416
</span><span class='line'>  Program 28480
</span><span class='line'>  Program 28512
</span><span class='line'>Output #0, mp3, to 'demo.mp3':
</span><span class='line'>  Metadata:
</span><span class='line'>    TSSE            : Lavf53.21.1
</span><span class='line'>    Stream #0.0(eng): Audio: mp2, 48000 Hz, mono, 64 kb/s
</span><span class='line'>Stream mapping:
</span><span class='line'>  Stream #0.0 -&gt; #0.0
</span><span class='line'>Press ctrl-c to stop encoding
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 15 got 3
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 5 got 9
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 11 got 15
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 1 got 5
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 0 expected 10 got 11
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 1601 expected 9 got 6
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 18 expected 3 got 13
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 18 expected 14 got 1
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 1602 expected 12 got 10
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 16 expected 11 got 5
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 7 got 13
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 15 got 3
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 5 got 9
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 11 got 15
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 20 expected 1 got 5
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 18 expected 9 got 7
</span><span class='line'>[mpegts @ 0x8337a0] Continuity check failed for pid 1601 expected 13 got 2
</span><span class='line'>size=     865kB time=110.69 bitrate=  64.0kbits/s
</span><span class='line'>video:0kB audio:865kB global headers:0kB muxing overhead 0.014569%
</span><span class='line'>bramante@matrix:~/test/audio$ ll
</span><span class='line'>total 11460
</span><span class='line'>drwxrwxr-x 2 bramante bramante     4096 Aug 24 17:53 ./
</span><span class='line'>drwxrwxr-x 4 bramante bramante     4096 Aug 24 17:51 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante   885585 Aug 24 17:53 demo.mp3
</span><span class='line'>-rwxrw-rw- 1 bramante bramante 10834252 Aug 24 17:25 demo.ts*
</span><span class='line'>bramante@matrix:~/test/audio$ mediainfo demo.mp3
</span><span class='line'>General
</span><span class='line'>Complete name                            : demo.mp3
</span><span class='line'>Format                                   : MPEG Audio
</span><span class='line'>File size                                : 865 KiB
</span><span class='line'>Duration                                 : 1mn 50s
</span><span class='line'>Overall bit rate mode                    : Constant
</span><span class='line'>Overall bit rate                         : 64.0 Kbps
</span><span class='line'>Encoding settings                        : Lavf53.21.1
</span><span class='line'>
</span><span class='line'>Audio
</span><span class='line'>Format                                   : MPEG Audio
</span><span class='line'>Format version                           : Version 1
</span><span class='line'>Format profile                           : Layer 2
</span><span class='line'>Duration                                 : 1mn 50s
</span><span class='line'>Bit rate mode                            : Constant
</span><span class='line'>Bit rate                                 : 64.0 Kbps
</span><span class='line'>Channel(s)                               : 1 channel
</span><span class='line'>Sampling rate                            : 48.0 KHz
</span><span class='line'>Compression mode                         : Lossy
</span><span class='line'>Stream size                              : 864 KiB (100%)
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>bramante@matrix:~/test/audio$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Demangle C++ Symbols]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/20/demangle-c-plus-plus-symbols/"/>
    <updated>2015-08-20T09:26:40+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/20/demangle-c-plus-plus-symbols</id>
    <content type="html"><![CDATA[<p>當我們在debug時, 有時候會遇到未經demangle過的C++ symbol name,
乍看之下, 常常不太能確定這到底是哪個API,
這時可以用c++filt把這樣的symbol name轉換(demangle)成我們看得懂的symbol name.</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C++FILT(1)                                                             GNU Development Tools                                                             C++FILT(1)
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>NAME
</span><span class='line'>       c++filt - Demangle C++ and Java symbols.
</span><span class='line'>
</span><span class='line'>SYNOPSIS
</span><span class='line'>       c++filt [-_|--strip-underscores]
</span><span class='line'>               [-n|--no-strip-underscores]
</span><span class='line'>               [-p|--no-params]
</span><span class='line'>               [-t|--types]
</span><span class='line'>               [-i|--no-verbose]
</span><span class='line'>               [-s format|--format=format]
</span><span class='line'>               [--help]  [--version]  [symbol...]
</span><span class='line'>
</span><span class='line'>DESCRIPTION
</span><span class='line'>       The C++ and Java languages provide function overloading, which means that you can write many functions with the same name, providing that each function
</span><span class='line'>       takes parameters of different types.  In order to be able to distinguish these similarly named functions C++ and Java encode them into a low-level assembler
</span><span class='line'>       name which uniquely identifies each different version.  This process is known as mangling. The c++filt [1] program does the inverse mapping: it decodes
</span><span class='line'>       (demangles) low-level names into user-level names so that they can be read.
</span><span class='line'>
</span><span class='line'>       Every alphanumeric word (consisting of letters, digits, underscores, dollars, or periods) seen in the input is a potential mangled name.  If the name
</span><span class='line'>       decodes into a C++ name, the C++ name replaces the low-level name in the output, otherwise the original word is output.  In this way you can pass an entire
</span><span class='line'>       assembler source file, containing mangled names, through c++filt and see the same source file containing demangled names.
</span><span class='line'>
</span><span class='line'>       You can also use c++filt to decipher individual symbols by passing them on the command line:
</span><span class='line'>
</span><span class='line'>               c++filt &lt;symbol&gt;
</span><span class='line'>
</span><span class='line'>       If no symbol arguments are given, c++filt reads symbol names from the standard input instead.  All the results are printed on the standard output.  The
</span><span class='line'>       difference between reading names from the command line versus reading names from the standard input is that command line arguments are expected to be just
</span><span class='line'>       mangled names and no checking is performed to separate them from surrounding text.  Thus for example:
</span><span class='line'>
</span><span class='line'>               c++filt -n _Z1fv
</span><span class='line'>
</span><span class='line'>       will work and demangle the name to "f()" whereas:
</span><span class='line'>
</span><span class='line'>               c++filt -n _Z1fv,
</span><span class='line'>
</span><span class='line'>       will not work.  (Note the extra comma at the end of the mangled name which makes it invalid).  This command however will work:
</span><span class='line'>
</span><span class='line'>               echo _Z1fv, | c++filt -n
</span><span class='line'>
</span><span class='line'>       and will display "f(),", i.e., the demangled name followed by a trailing comma.  This behaviour is because when the names are read from the standard input
</span><span class='line'>       it is expected that they might be part of an assembler source file where there might be extra, extraneous characters trailing after a mangled name.  For
</span><span class='line'>       example:
</span><span class='line'>
</span><span class='line'>                   .type   _Z1fv, @function
</span><span class='line'>
</span><span class='line'>OPTIONS
</span><span class='line'>       -_
</span><span class='line'>       --strip-underscores
</span><span class='line'>           On some systems, both the C and C++ compilers put an underscore in front of every name.  For example, the C name "foo" gets the low-level name "_foo".
</span><span class='line'>           This option removes the initial underscore.  Whether c++filt removes the underscore by default is target dependent.
</span><span class='line'>
</span><span class='line'>       -n
</span><span class='line'>       --no-strip-underscores
</span><span class='line'>           Do not remove the initial underscore.
</span><span class='line'>....</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>找幾個C++的symbol name來示範一下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~$ objdump -R /usr/lib/x86_64-linux-gnu/libQtXml.so.4.8 | tail -n 11
</span><span class='line'>0000000000244368 R_X86_64_JUMP_SLOT  _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
</span><span class='line'>0000000000244370 R_X86_64_JUMP_SLOT  _ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE
</span><span class='line'>0000000000244378 R_X86_64_JUMP_SLOT  _Znwm
</span><span class='line'>0000000000244380 R_X86_64_JUMP_SLOT  _ZNK10QTextCodec9canEncodeE5QChar
</span><span class='line'>0000000000244388 R_X86_64_JUMP_SLOT  _Unwind_Resume
</span><span class='line'>0000000000244390 R_X86_64_JUMP_SLOT  _ZNK7QString10simplifiedEv
</span><span class='line'>0000000000244398 R_X86_64_JUMP_SLOT  memcpy
</span><span class='line'>00000000002443a0 R_X86_64_JUMP_SLOT  _ZN7QString7reallocEi
</span><span class='line'>00000000002443a8 R_X86_64_JUMP_SLOT  _ZN10QByteArray6appendERKS_
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
</span><span class='line'>QTextStream::QTextStream(QString*, QFlags&lt;QIODevice::OpenModeFlag&gt;)
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE
</span><span class='line'>QString::startsWith(QString const&, Qt::CaseSensitivity) const
</span><span class='line'>bramante@matrix:~$ c++filt -n _Znwm
</span><span class='line'>operator new(unsigned long)
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZNK10QTextCodec9canEncodeE5QChar
</span><span class='line'>QTextCodec::canEncode(QChar) const
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZNK7QString10simplifiedEv
</span><span class='line'>QString::simplified() const
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZN7QString7reallocEi
</span><span class='line'>QString::realloc(int)
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZN10QByteArray6appendERKS_
</span><span class='line'>QByteArray::append(QByteArray const&)
</span><span class='line'>bramante@matrix:~$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>請注意, 過長的symbol name會被readelf截去尾巴,
導致c++filt無法demangle出正確的symbol name,
這時請在readelf使用&#8221;-W&#8221;參數, 讓readelf印出完整的symbol name,
以下是操作範例:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~$ readelf -a /usr/lib/x86_64-linux-gnu/libQtXml.so.4.8 | grep 244368
</span><span class='line'>000000244368  007a00000007 R_X86_64_JUMP_SLO 0000000000000000 _ZN11QTextStreamC1EP7Q + 0
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZN11QTextStreamC1EP7Q
</span><span class='line'>_ZN11QTextStreamC1EP7Q
</span><span class='line'>bramante@matrix:~$ readelf -Wa /usr/lib/x86_64-linux-gnu/libQtXml.so.4.8 | grep 244368
</span><span class='line'>0000000000244368  0000007a00000007 R_X86_64_JUMP_SLOT     0000000000000000 _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE + 0
</span><span class='line'>bramante@matrix:~$ c++filt -n _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
</span><span class='line'>QTextStream::QTextStream(QString*, QFlags&lt;QIODevice::OpenModeFlag&gt;)
</span><span class='line'>bramante@matrix:~$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (6)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/19/gdb-debugging-skills-6/"/>
    <updated>2015-08-19T00:53:37+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/19/gdb-debugging-skills-6</id>
    <content type="html"><![CDATA[<p>假設在下面的程式裡, test()這個API是用來取得遙控器的key值的.
正常狀況下test()只會送出系統所支援的A廠遙控器的key code (100~103).
目前拿到一支B廠的遙控器, 它的key code是0~3, 要怎樣在不改code的狀況下,
利用gdb的batch mode去attach執行中的process,
讓gdb幫忙做key code的轉換, 好讓系統能支援B廠的遙控器.</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">test</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span> <span class="n">getValue</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">static</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'> <span class="o">*</span><span class="n">getValue</span> <span class="o">=</span> <span class="n">count</span> <span class="o">%</span> <span class="mi">4</span> <span class="p">;</span>
</span><span class='line'> <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span> <span class="p">;</span>
</span><span class='line'> <span class="k">return</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">getValue</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">test</span><span class="p">(</span><span class="o">&amp;</span><span class="n">getValue</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[*] value: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">getValue</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 16
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Aug 19 01:08 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante 4096 Aug 11 23:32 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  385 Aug 19 00:50 gdb.cmds
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  463 Aug 19 00:21 test.c
</span><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ ./test 15 &gt; /dev/null &
</span><span class='line'>[1] 3027
</span><span class='line'>bramante@matrix:~/test$ sudo gdb --batch --command=gdb.cmds --pid=3027
</span><span class='line'>
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fff23dfe000
</span><span class='line'>0x00007f25b2148090 in nanosleep () from /lib/x86_64-linux-gnu/libc.so.6
</span><span class='line'>Breakpoint 1 at 0x40058c: file ./test.c, line 8.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (getValue=0x7fff23ca24a4) at ./test.c:8
</span><span class='line'>8        *getValue = count % 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff23ca2598) at ./test.c:23
</span><span class='line'>23              printf("[*] value: %d\n",getValue);
</span><span class='line'>test (getValue=0x7fff23ca24a4) at ./test.c:11
</span><span class='line'>11      }
</span><span class='line'>9        count += 1 ;
</span><span class='line'>Because GDB is in replay mode, writing to memory will make the execution log unusable from this point onward.  Write memory at address 0x7fff23ca24a4?(y or n) [answered Y; input not from terminal]
</span><span class='line'>*getValue: 103
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (getValue=0x7fff23ca24a4) at ./test.c:8
</span><span class='line'>8        *getValue = count % 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff23ca2598) at ./test.c:23
</span><span class='line'>23              printf("[*] value: %d\n",getValue);
</span><span class='line'>test (getValue=0x7fff23ca24a4) at ./test.c:11
</span><span class='line'>11      }
</span><span class='line'>9        count += 1 ;
</span><span class='line'>Because GDB is in replay mode, writing to memory will make the execution log unusable from this point onward.  Write memory at address 0x7fff23ca24a4?(y or n) [answered Y; input not from terminal]
</span><span class='line'>*getValue: 100
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (getValue=0x7fff23ca24a4) at ./test.c:8
</span><span class='line'>8        *getValue = count % 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff23ca2598) at ./test.c:23
</span><span class='line'>23              printf("[*] value: %d\n",getValue);
</span><span class='line'>test (getValue=0x7fff23ca24a4) at ./test.c:11
</span><span class='line'>11      }
</span><span class='line'>9        count += 1 ;
</span><span class='line'>Because GDB is in replay mode, writing to memory will make the execution log unusable from this point onward.  Write memory at address 0x7fff23ca24a4?(y or n) [answered Y; input not from terminal]
</span><span class='line'>*getValue: 101
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (getValue=0x7fff23ca24a4) at ./test.c:8
</span><span class='line'>8        *getValue = count % 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff23ca2598) at ./test.c:23
</span><span class='line'>23              printf("[*] value: %d\n",getValue);
</span><span class='line'>test (getValue=0x7fff23ca24a4) at ./test.c:11
</span><span class='line'>11      }
</span><span class='line'>9        count += 1 ;
</span><span class='line'>Because GDB is in replay mode, writing to memory will make the execution log unusable from this point onward.  Write memory at address 0x7fff23ca24a4?(y or n) [answered Y; input not from terminal]
</span><span class='line'>*getValue: 102
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>[Inferior 1 (process 3027) exited normally]
</span><span class='line'>[1]+  Done                    ./test 15 &gt; /dev/null
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>摘要出上面log裡的&#8221;*getValue: 10x&#8221;, 可以知道gdb的確幫忙做了key code的轉換:</p>

<pre><code>*getValue: 103
*getValue: 100
*getValue: 101
*getValue: 102
</code></pre>

<p>前面所用到的gdb.cmds檔案的內容如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ cat gdb.cmds
</span><span class='line'>b test
</span><span class='line'>
</span><span class='line'>define printFuncInfo
</span><span class='line'>  record
</span><span class='line'>  finish
</span><span class='line'>  rs
</span><span class='line'>  rn
</span><span class='line'>  if *getValue == 0
</span><span class='line'>    set *getValue=100
</span><span class='line'>   else
</span><span class='line'>    if *getValue == 1
</span><span class='line'>      set *getValue=101
</span><span class='line'>     else
</span><span class='line'>      if *getValue == 2
</span><span class='line'>        set *getValue=102
</span><span class='line'>       else
</span><span class='line'>        set *getValue=103
</span><span class='line'>      end
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>  printf "*getValue: %d\n", *getValue
</span><span class='line'>  record stop
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>commands 1
</span><span class='line'>  printFuncInfo
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>continue
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>神奇吧, gdb還能幫忙轉換key code ~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (5)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/18/gdb-debugging-skills-5/"/>
    <updated>2015-08-18T09:24:13+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/18/gdb-debugging-skills-5</id>
    <content type="html"><![CDATA[<p>debug時必需要能夠掌握程式的flow,
API如果有多個return點,
必須要知道程式到底從哪一個位置return,
若要透過gdb取得這方面的資訊,
手動加break point是比較麻煩的,
較為自動化的方法可以使用gdb的reverse commands.</p>

<p>下面示範如何在gdb的batch mode去attach執行中的process,
並印出API在哪一行return的.</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">unsigned</span> <span class="kt">int</span> <span class="nf">test</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">arg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">arg</span> <span class="o">%=</span> <span class="mi">4</span> <span class="p">;</span>
</span><span class='line'> <span class="k">switch</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">test</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 16
</span><span class='line'>drwxrwxr-x 2 bramante bramante 4096 Aug 18 09:37 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante 4096 Aug 11 23:32 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  154 Aug 18 09:20 gdb.cmds
</span><span class='line'>-rw-rw-r-- 1 bramante bramante  581 Aug 18 09:18 test.c
</span><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ ./test 15 &gt; /dev/null &
</span><span class='line'>[1] 2927
</span><span class='line'>bramante@matrix:~/test$ sudo gdb --batch --command=gdb.cmds --pid=2927
</span><span class='line'>[sudo] password for bramante:
</span><span class='line'>0x00007f287fe2a090 in nanosleep () from /lib/x86_64-linux-gnu/libc.so.6
</span><span class='line'>Breakpoint 1 at 0x40054b: file ./test.c, line 7.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=10) at ./test.c:7
</span><span class='line'>7        arg %= 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff02d8e6b8) at ./test.c:36
</span><span class='line'>36              sleep(1);
</span><span class='line'>Value returned is $1 = 2
</span><span class='line'>test (arg=2) at ./test.c:25
</span><span class='line'>25      }
</span><span class='line'>17                 return arg ;
</span><span class='line'>arg: 2
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=11) at ./test.c:7
</span><span class='line'>7        arg %= 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff02d8e6b8) at ./test.c:36
</span><span class='line'>36              sleep(1);
</span><span class='line'>Value returned is $2 = 3
</span><span class='line'>test (arg=3) at ./test.c:25
</span><span class='line'>25      }
</span><span class='line'>21                 return arg ;
</span><span class='line'>arg: 3
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=12) at ./test.c:7
</span><span class='line'>7        arg %= 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff02d8e6b8) at ./test.c:36
</span><span class='line'>36              sleep(1);
</span><span class='line'>Value returned is $3 = 0
</span><span class='line'>test (arg=0) at ./test.c:25
</span><span class='line'>25      }
</span><span class='line'>11                 return arg ;
</span><span class='line'>arg: 0
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=13) at ./test.c:7
</span><span class='line'>7        arg %= 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff02d8e6b8) at ./test.c:36
</span><span class='line'>36              sleep(1);
</span><span class='line'>Value returned is $4 = 1
</span><span class='line'>test (arg=1) at ./test.c:25
</span><span class='line'>25      }
</span><span class='line'>14                 return arg ;
</span><span class='line'>arg: 1
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=14) at ./test.c:7
</span><span class='line'>7        arg %= 4 ;
</span><span class='line'>main (argc=2, argv=0x7fff02d8e6b8) at ./test.c:36
</span><span class='line'>36              sleep(1);
</span><span class='line'>Value returned is $5 = 2
</span><span class='line'>test (arg=2) at ./test.c:25
</span><span class='line'>25      }
</span><span class='line'>17                 return arg ;
</span><span class='line'>arg: 2
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>[Inferior 1 (process 2927) exited normally]
</span><span class='line'>[1]+  Done                    ./test 15 &gt; /dev/null
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>摘要出上面log裡的&#8221;return arg&#8221;, 可以知道return點有4個,
分別在 11, 14, 17, 21 行:</p>

<pre><code>17                 return arg ;
21                 return arg ;
11                 return arg ;
14                 return arg ;
17                 return arg ;
</code></pre>

<p>前面所用到的gdb.cmds檔案的內容如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ cat gdb.cmds
</span><span class='line'>b test
</span><span class='line'>
</span><span class='line'>define printFuncInfo
</span><span class='line'>  record
</span><span class='line'>  finish
</span><span class='line'>  rs
</span><span class='line'>  rn
</span><span class='line'>  printf "arg: %d\n", arg
</span><span class='line'>  record stop
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>commands 1
</span><span class='line'>  printFuncInfo
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>continue
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>要使用reverse command前要先record,
使用後要record stop,
其中的rs是reverse-step,
rn則是reverse-next,
reverse command的執行方向與正常的command相反.
由於finish時已經回到main(), 因此需要先執行rs回到test(),
再執行rn找到return點.</p>

<p>沒有source code時的執行狀況如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ./test 10 &gt; /dev/null &
</span><span class='line'>[1] 2968
</span><span class='line'>bramante@matrix:~/test$ sudo gdb --batch --command=gdb.cmds --pid=2968
</span><span class='line'>0x00007f4f518f3090 in nanosleep () from /lib/x86_64-linux-gnu/libc.so.6
</span><span class='line'>Breakpoint 1 at 0x40054b: file ./test.c, line 7.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=5) at ./test.c:7
</span><span class='line'>7       ./test.c: No such file or directory.
</span><span class='line'>main (argc=2, argv=0x7fff9f6e2d98) at ./test.c:36
</span><span class='line'>36      in ./test.c
</span><span class='line'>Value returned is $1 = 1
</span><span class='line'>test (arg=1) at ./test.c:25
</span><span class='line'>25      in ./test.c
</span><span class='line'>14      in ./test.c
</span><span class='line'>arg: 1
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=6) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>main (argc=2, argv=0x7fff9f6e2d98) at ./test.c:36
</span><span class='line'>36      in ./test.c
</span><span class='line'>Value returned is $2 = 2
</span><span class='line'>test (arg=2) at ./test.c:25
</span><span class='line'>25      in ./test.c
</span><span class='line'>17      in ./test.c
</span><span class='line'>arg: 2
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=7) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>main (argc=2, argv=0x7fff9f6e2d98) at ./test.c:36
</span><span class='line'>36      in ./test.c
</span><span class='line'>Value returned is $3 = 3
</span><span class='line'>test (arg=3) at ./test.c:25
</span><span class='line'>25      in ./test.c
</span><span class='line'>21      in ./test.c
</span><span class='line'>arg: 3
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=8) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>main (argc=2, argv=0x7fff9f6e2d98) at ./test.c:36
</span><span class='line'>36      in ./test.c
</span><span class='line'>Value returned is $4 = 0
</span><span class='line'>test (arg=0) at ./test.c:25
</span><span class='line'>25      in ./test.c
</span><span class='line'>11      in ./test.c
</span><span class='line'>arg: 0
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=9) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>main (argc=2, argv=0x7fff9f6e2d98) at ./test.c:36
</span><span class='line'>36      in ./test.c
</span><span class='line'>Value returned is $5 = 1
</span><span class='line'>test (arg=1) at ./test.c:25
</span><span class='line'>25      in ./test.c
</span><span class='line'>14      in ./test.c
</span><span class='line'>arg: 1
</span><span class='line'>Process record is stopped and all execution logs are deleted.
</span><span class='line'>[Inferior 1 (process 2968) exited normally]
</span><span class='line'>[1]+  Done                    ./test 10 &gt; /dev/null
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>在 <a href="http://www.gnu.org/software/gdb/news">http://www.gnu.org/software/gdb/news</a>
 有提到, GDB 7.5之後才支援ARM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (4)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/14/gdb-debugging-skills-4/"/>
    <updated>2015-08-14T00:20:40+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/14/gdb-debugging-skills-4</id>
    <content type="html"><![CDATA[<p>在複雜的系統裡, 要用gdb把程式帶(跑)起來, 有時是比較麻煩的,
這時用attach process的方式會比較方便.
下面示範如何在gdb的batch mode去attach執行中的process,
並印出API的參數與它的return value.</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">test</span><span class="p">(</span><span class="kt">int</span> <span class="n">arg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;@test(arg:%d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">arg</span><span class="p">);</span>
</span><span class='line'> <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">test</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 28
</span><span class='line'>drwxrwxr-x 2 bramante bramante  4096 Aug 14 00:24 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante  4096 Aug 11 23:32 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante   107 Aug 14 00:19 gdb.cmds
</span><span class='line'>-rwxrwxr-x 1 bramante bramante 10068 Aug 14 00:24 test*
</span><span class='line'>-rw-rw-r-- 1 bramante bramante   330 Aug 13 00:04 test.c
</span><span class='line'>bramante@matrix:~/test$ ./test 20 &gt; /dev/null &
</span><span class='line'>[4] 2896
</span><span class='line'>bramante@matrix:~/test$ gdb --batch --command=gdb.cmds --pid=2896
</span><span class='line'>Could not attach to process.  If your uid matches the uid of the target
</span><span class='line'>process, check the setting of /proc/sys/kernel/yama/ptrace_scope, or try
</span><span class='line'>again as the root user.  For more details, see /etc/sysctl.d/10-ptrace.conf
</span><span class='line'>ptrace: Operation not permitted.
</span><span class='line'>No symbol table is loaded.  Use the "file" command.
</span><span class='line'>Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
</span><span class='line'>No breakpoint number 1.
</span><span class='line'>gdb.cmds:9: Error in sourced command file:
</span><span class='line'>No breakpoints specified.
</span><span class='line'>bramante@matrix:~/test$ sudo gdb --batch --command=gdb.cmds --pid=2896
</span><span class='line'>
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fff8c5fe000
</span><span class='line'>0x00007f8021bd5090 in nanosleep () from /lib/x86_64-linux-gnu/libc.so.6
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=15) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 15
</span><span class='line'>main (argc=2, argv=0x7fff8c4736a8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $1 = 15
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=16) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 16
</span><span class='line'>main (argc=2, argv=0x7fff8c4736a8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $2 = 16
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=17) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 17
</span><span class='line'>main (argc=2, argv=0x7fff8c4736a8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $3 = 17
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=18) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 18
</span><span class='line'>main (argc=2, argv=0x7fff8c4736a8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $4 = 18
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=19) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 19
</span><span class='line'>main (argc=2, argv=0x7fff8c4736a8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $5 = 19
</span><span class='line'>[Inferior 1 (process 2896) exited normally]
</span><span class='line'>[4]+  Done                    ./test 20 &gt; /dev/null
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>gdb順利印出API的參數與它的return value.
請留意, 需要有root的權限才能成功的attach process.</p>

<p>前面所用到的gdb.cmds檔案的內容如下, 請留意, attach之後是用continue而不是run:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ cat gdb.cmds
</span><span class='line'>b test
</span><span class='line'>
</span><span class='line'>define printFuncInfo
</span><span class='line'>  info args
</span><span class='line'>  finish
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>commands 1
</span><span class='line'>  printFuncInfo
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>continue
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>在沒有source code的狀況下, gdb一樣是可以印值的(重要的是debug symbol而不是source code):</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ rm test.c
</span><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 24
</span><span class='line'>drwxrwxr-x 2 bramante bramante  4096 Aug 14 00:39 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante  4096 Aug 11 23:32 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante   107 Aug 14 00:19 gdb.cmds
</span><span class='line'>-rwxrwxr-x 1 bramante bramante 10068 Aug 14 00:28 test*
</span><span class='line'>bramante@matrix:~/test$ ./test 15 &gt; /dev/null &
</span><span class='line'>[3] 2933
</span><span class='line'>bramante@matrix:~/test$ sudo gdb --batch --command=gdb.cmds --pid=2933
</span><span class='line'>
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fff965d7000
</span><span class='line'>0x00007f9148f53090 in nanosleep () from /lib/x86_64-linux-gnu/libc.so.6
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=9) at ./test.c:7
</span><span class='line'>7       ./test.c: No such file or directory.
</span><span class='line'>arg = 9
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $1 = 9
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=10) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 10
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $2 = 10
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=11) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 11
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $3 = 11
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=12) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 12
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $4 = 12
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=13) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 13
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $5 = 13
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=14) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 14
</span><span class='line'>main (argc=2, argv=0x7fff9642daf8) at ./test.c:20
</span><span class='line'>20      in ./test.c
</span><span class='line'>Value returned is $6 = 14
</span><span class='line'>[Inferior 1 (process 2933) exited normally]
</span><span class='line'>[3]+  Done                    ./test 15 &gt; /dev/null
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (3)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/13/gdb-debugging-skills-3/"/>
    <updated>2015-08-13T00:47:52+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/13/gdb-debugging-skills-3</id>
    <content type="html"><![CDATA[<p>在gdb batch mode要怎麼印出每次執行某API的return value, 方法如下.</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">test</span><span class="p">(</span><span class="kt">int</span> <span class="n">arg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;@test(arg:%d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">arg</span><span class="p">);</span>
</span><span class='line'> <span class="k">return</span> <span class="n">arg</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">test</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ gdb --batch --command=gdb.cmds --args ./test 3
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=0) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 0
</span><span class='line'>@test(arg:0)
</span><span class='line'>main (argc=2, argv=0x7fffffffe5b8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $1 = 0
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=1) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 1
</span><span class='line'>@test(arg:1)
</span><span class='line'>main (argc=2, argv=0x7fffffffe5b8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $2 = 1
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=2) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 2
</span><span class='line'>@test(arg:2)
</span><span class='line'>main (argc=2, argv=0x7fffffffe5b8) at ./test.c:20
</span><span class='line'>20              sleep(1);
</span><span class='line'>Value returned is $3 = 2
</span><span class='line'>[Inferior 1 (process 2986) exited normally]
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>可以看到test()被執行了3次, 它的return value都被gdb給印了出來.</p>

<p>前面所用到的gdb.cmds檔案的內容如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b test
</span><span class='line'>
</span><span class='line'>define printFuncInfo
</span><span class='line'>  info args
</span><span class='line'>  finish
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>commands 1
</span><span class='line'>  printFuncInfo
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>run</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>要注意, gdb.cmds的內容不能寫成下面這樣, 不然commands在執行到finish後, 在finish後面的command都不會被執行, 需要寫成像前面那樣, 用個user-defined commands把這些command多包一層, 才能避開這個問題.</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>錯誤的gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b test
</span><span class='line'>
</span><span class='line'>commands 1
</span><span class='line'>  info args
</span><span class='line'>  finish
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>run</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (2)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/11/gdb-debugging-skills-2/"/>
    <updated>2015-08-11T23:56:31+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/11/gdb-debugging-skills-2</id>
    <content type="html"><![CDATA[<p>假設有一支客戶寫的程式,
執行檔有debug symbol,
在客戶不給source code的狀況下,
該如何知道某個API被call的情形?</p>

<p>範例程式:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;time.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">test</span><span class="p">(</span><span class="kt">int</span> <span class="n">arg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;@test(arg:%d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">arg</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">test</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編譯與執行:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ ./test 5
</span><span class='line'>@test(arg:0)
</span><span class='line'>@test(arg:1)
</span><span class='line'>@test(arg:2)
</span><span class='line'>@test(arg:3)
</span><span class='line'>@test(arg:4)
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>先在有source code的狀況下, 讓gdb自動印出API被call時的參數:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gdb ./test
</span><span class='line'>GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
</span><span class='line'>and "show warranty" for details.
</span><span class='line'>This GDB was configured as "x86_64-linux-gnu".
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://bugs.launchpad.net/gdb-linaro/&gt;...
</span><span class='line'>Reading symbols from /home/bramante/test/test...done.
</span><span class='line'>(gdb) b test
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>(gdb) commands 1
</span><span class='line'>Type commands for breakpoint(s) 1, one per line.
</span><span class='line'>End with a line saying just "end".
</span><span class='line'>&gt;info args
</span><span class='line'>&gt;continue
</span><span class='line'>&gt;end
</span><span class='line'>(gdb) run 5
</span><span class='line'>Starting program: /home/bramante/test/test 5
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=0) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 0
</span><span class='line'>@test(arg:0)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=1) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 1
</span><span class='line'>@test(arg:1)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=2) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 2
</span><span class='line'>@test(arg:2)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=3) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 3
</span><span class='line'>@test(arg:3)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=4) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 4
</span><span class='line'>@test(arg:4)
</span><span class='line'>[Inferior 1 (process 3035) exited normally]
</span><span class='line'>(gdb)</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>接下來, 改用gdb的batch mode,
這樣就可以在target上進行測試後,
再透過console log來了解API被call的情形:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gdb --batch --command=gdb.cmds --args ./test 5
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=0) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 0
</span><span class='line'>@test(arg:0)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=1) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 1
</span><span class='line'>@test(arg:1)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=2) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 2
</span><span class='line'>@test(arg:2)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=3) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 3
</span><span class='line'>@test(arg:3)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=4) at ./test.c:7
</span><span class='line'>7        printf("@test(arg:%d)\n",arg);
</span><span class='line'>arg = 4
</span><span class='line'>@test(arg:4)
</span><span class='line'>[Inferior 1 (process 3048) exited normally]
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>前面所用到的gdb.cmds的內容如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b test
</span><span class='line'>commands 1
</span><span class='line'>  info args
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>run</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>回到本文最前面所提到的&#8221;沒有source code&#8221;的狀況,
我把test.c給砍掉, 看會發生怎樣的狀況:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ ll
</span><span class='line'>total 28
</span><span class='line'>drwxrwxr-x 2 bramante bramante  4096 Aug 12 00:10 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante  4096 Aug 11 23:32 ../
</span><span class='line'>-rw-rw-r-- 1 bramante bramante    50 Aug 11 23:44 gdb.cmds
</span><span class='line'>-rwxrwxr-x 1 bramante bramante 10084 Aug 11 23:57 test*
</span><span class='line'>-rw-rw-r-- 1 bramante bramante   316 Aug 11 23:54 test.c
</span><span class='line'>bramante@matrix:~/test$ rm test.c
</span><span class='line'>bramante@matrix:~/test$ gdb --batch --command=gdb.cmds --args ./test 5
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=0) at ./test.c:7
</span><span class='line'>7       ./test.c: No such file or directory.
</span><span class='line'>arg = 0
</span><span class='line'>@test(arg:0)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=1) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 1
</span><span class='line'>@test(arg:1)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=2) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 2
</span><span class='line'>@test(arg:2)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=3) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 3
</span><span class='line'>@test(arg:3)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=4) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>arg = 4
</span><span class='line'>@test(arg:4)
</span><span class='line'>[Inferior 1 (process 3060) exited normally]
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>gdb依然可以印出API的參數.</p>

<p>將gdb.cmds的內容稍做修改:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>gdb.cmds</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b test
</span><span class='line'>commands 1
</span><span class='line'>  bt
</span><span class='line'>  continue
</span><span class='line'>end
</span><span class='line'>run</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>很不錯, 在修改gdb.cmds後可以印出callstack, 這樣就可以知道API是怎麼被call的:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gdb --batch --command=gdb.cmds --args ./test 2
</span><span class='line'>Breakpoint 1 at 0x40058f: file ./test.c, line 7.
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=0) at ./test.c:7
</span><span class='line'>7       ./test.c: No such file or directory.
</span><span class='line'>#0  test (arg=0) at ./test.c:7
</span><span class='line'>#1  0x00000000004005e6 in main (argc=2, argv=0x7fffffffe5b8) at ./test.c:18
</span><span class='line'>@test(arg:0)
</span><span class='line'>
</span><span class='line'>Breakpoint 1, test (arg=1) at ./test.c:7
</span><span class='line'>7       in ./test.c
</span><span class='line'>#0  test (arg=1) at ./test.c:7
</span><span class='line'>#1  0x00000000004005e6 in main (argc=2, argv=0x7fffffffe5b8) at ./test.c:18
</span><span class='line'>@test(arg:1)
</span><span class='line'>[Inferior 1 (process 3091) exited normally]
</span><span class='line'>bramante@matrix:~/test$</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>透過gdb的這招, 可以在沒source code的狀況下, 深入了解third-party程式的運作方式.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDB Debugging Skills (1)]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/10/gdb-debugging-skills-1/"/>
    <updated>2015-08-10T23:33:42+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/10/gdb-debugging-skills-1</id>
    <content type="html"><![CDATA[<p>gdb以Hex格式印出100個byte的array內容: x/100ubx array</p>

<p>gdb以二進制印出變數的value: p /t var</p>

<p>gdb印出function prototype: call function_name</p>

<p>以下是實際操作的範例:</p>

<figure class='code'><figcaption><span>test.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">var</span> <span class="o">=</span> <span class="mh">0x5A</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">array</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">i</span> <span class="p">;</span>
</span><span class='line'> <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>     <span class="n">array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">100</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/test$ gcc -g -o ./test ./test.c
</span><span class='line'>bramante@matrix:~/test$ cat -n test.c
</span><span class='line'>     1  #include &lt;stdio.h&gt;
</span><span class='line'>     2
</span><span class='line'>     3  int main(void)
</span><span class='line'>     4  {
</span><span class='line'>     5   unsigned char var = 0x5A ;
</span><span class='line'>     6   unsigned char array[100];
</span><span class='line'>     7   int i ;
</span><span class='line'>     8   for( i = 0 ; i &lt; 100 ; i ++ )
</span><span class='line'>     9      {
</span><span class='line'>    10       array[i] = i + 100 ;
</span><span class='line'>    11      }
</span><span class='line'>    12   return 0 ;
</span><span class='line'>    13  }
</span><span class='line'>bramante@matrix:~/test$ gdb ./test
</span><span class='line'>GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
</span><span class='line'>and "show warranty" for details.
</span><span class='line'>This GDB was configured as "x86_64-linux-gnu".
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://bugs.launchpad.net/gdb-linaro/&gt;...
</span><span class='line'>Reading symbols from /home/bramante/test/test...done.
</span><span class='line'>(gdb) b test.c:12
</span><span class='line'>Breakpoint 1 at 0x400561: file ./test.c, line 12.
</span><span class='line'>(gdb) run
</span><span class='line'>Starting program: /home/bramante/test/test
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000
</span><span class='line'>
</span><span class='line'>Breakpoint 1, main () at ./test.c:12
</span><span class='line'>12       return 0 ;
</span><span class='line'>(gdb) x/100ubx array
</span><span class='line'>0x7fffffffe460: 0x64    0x65    0x66    0x67    0x68    0x69    0x6a    0x6b
</span><span class='line'>0x7fffffffe468: 0x6c    0x6d    0x6e    0x6f    0x70    0x71    0x72    0x73
</span><span class='line'>0x7fffffffe470: 0x74    0x75    0x76    0x77    0x78    0x79    0x7a    0x7b
</span><span class='line'>0x7fffffffe478: 0x7c    0x7d    0x7e    0x7f    0x80    0x81    0x82    0x83
</span><span class='line'>0x7fffffffe480: 0x84    0x85    0x86    0x87    0x88    0x89    0x8a    0x8b
</span><span class='line'>0x7fffffffe488: 0x8c    0x8d    0x8e    0x8f    0x90    0x91    0x92    0x93
</span><span class='line'>0x7fffffffe490: 0x94    0x95    0x96    0x97    0x98    0x99    0x9a    0x9b
</span><span class='line'>0x7fffffffe498: 0x9c    0x9d    0x9e    0x9f    0xa0    0xa1    0xa2    0xa3
</span><span class='line'>0x7fffffffe4a0: 0xa4    0xa5    0xa6    0xa7    0xa8    0xa9    0xaa    0xab
</span><span class='line'>0x7fffffffe4a8: 0xac    0xad    0xae    0xaf    0xb0    0xb1    0xb2    0xb3
</span><span class='line'>0x7fffffffe4b0: 0xb4    0xb5    0xb6    0xb7    0xb8    0xb9    0xba    0xbb
</span><span class='line'>0x7fffffffe4b8: 0xbc    0xbd    0xbe    0xbf    0xc0    0xc1    0xc2    0xc3
</span><span class='line'>0x7fffffffe4c0: 0xc4    0xc5    0xc6    0xc7
</span><span class='line'>(gdb) p /t var
</span><span class='line'>$1 = 1011010
</span><span class='line'>(gdb) call main
</span><span class='line'>$2 = {int (void)} 0x400524 &lt;main&gt;
</span><span class='line'>(gdb)</span></code></pre></td></tr></table></div></figure>


<p></font></p>

<p>在得知function prototype後,
就能利用LD_PRELOAD來hook function,
在整合沒有source code的third-party的library時,
這是一個重要的debug技巧.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dump PCR]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/09/dump-pcr/"/>
    <updated>2015-08-09T16:00:11+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/09/dump-pcr</id>
    <content type="html"><![CDATA[<p>利用FFmpeg可以dump出TS file裡的PCR,
parse出PCR value的function是用FFmpeg裡的code修改而來,
以下是範例程式:</p>

<figure class='code'><figcaption><span>pcr.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;libavcodec/avcodec.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;libavformat/avformat.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CLEARBITS(a,b)   ((a) &amp;= ~(b))</span>
</span><span class='line'><span class="cp">#define SETBITS(a,b)     ((a) |= (b))</span>
</span><span class='line'><span class="cp">#define ISSET(a,b)       (((a) &amp; (b))!=0)</span>
</span><span class='line'><span class="cp">#define ISCLEARED(a,b)   (((a) &amp; (b))==0)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef MAX</span>
</span><span class='line'><span class="cp">#define MAX(a,b)  (((a) &gt; (b)) ? (a) : (b))</span>
</span><span class='line'><span class="cp">#endif              </span><span class="cm">/* max */</span><span class="cp"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef MIN</span>
</span><span class='line'><span class="cp">#define MIN(a,b)  (((a) &lt; (b)) ? (a) : (b))</span>
</span><span class='line'><span class="cp">#endif              </span><span class="cm">/* min */</span><span class="cp"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define MY_90K_COUNTS_OF_1_SECOND  90000</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define MY_SEARCH_PCR_SIZE  ((200 * 1024 / 188) * 188)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define MY_RB16(x)  ((((const unsigned char*)(x))[0] &lt;&lt; 8) | ((const unsigned char*)(x))[1])</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define MY_RB32(x)  ((((const unsigned char*)(x))[0] &lt;&lt; 24) | \</span>
</span><span class='line'><span class="cp">                     (((const unsigned char*)(x))[1] &lt;&lt; 16) | \</span>
</span><span class='line'><span class="cp">                     (((const unsigned char*)(x))[2] &lt;&lt;  8) | \</span>
</span><span class='line'><span class="cp">                      ((const unsigned char*)(x))[3])</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">MY_ParsePcr</span><span class="p">(</span> <span class="kt">long</span> <span class="kt">long</span> <span class="o">*</span><span class="n">ppcrHigh</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">ppcrLow</span><span class="p">,</span> <span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">packet</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">afc</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">flags</span> <span class="p">;</span>
</span><span class='line'> <span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">v</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">afc</span> <span class="o">=</span> <span class="p">(</span><span class="n">packet</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">afc</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="n">p</span> <span class="o">=</span> <span class="n">packet</span> <span class="o">+</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'> <span class="n">len</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'> <span class="n">p</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="n">flags</span> <span class="o">=</span> <span class="o">*</span><span class="n">p</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'> <span class="n">len</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">flags</span> <span class="o">&amp;</span> <span class="mh">0x10</span><span class="p">))</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="n">v</span> <span class="o">=</span> <span class="n">MY_RB32</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'> <span class="o">*</span><span class="n">ppcrHigh</span> <span class="o">=</span> <span class="p">((</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)</span><span class="n">v</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">7</span><span class="p">);</span>
</span><span class='line'> <span class="o">*</span><span class="n">ppcrLow</span> <span class="o">=</span> <span class="p">((</span><span class="n">p</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">|</span> <span class="n">p</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">long</span> <span class="kt">long</span> <span class="nf">MY_GetPcr</span><span class="p">(</span> <span class="kt">int</span> <span class="n">pcrPid</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span><span class="o">*</span> <span class="n">address</span><span class="p">,</span> <span class="kt">int</span> <span class="n">length</span><span class="p">,</span> <span class="kt">int</span> <span class="n">direction</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">pos</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">long</span> <span class="kt">long</span> <span class="n">timestamp</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">pcrL</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span> <span class="n">direction</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;;)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">pos</span> <span class="o">&gt;=</span> <span class="n">length</span> <span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">AV_NOPTS_VALUE</span> <span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="n">buf</span> <span class="o">=</span> <span class="n">address</span> <span class="o">+</span> <span class="n">pos</span> <span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">((</span><span class="n">pcrPid</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">MY_RB16</span><span class="p">(</span><span class="n">buf</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0x1FFF</span><span class="p">)</span> <span class="o">==</span> <span class="n">pcrPid</span><span class="p">)</span> <span class="o">&amp;&amp;</span>  <span class="n">MY_ParsePcr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">timestamp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pcrL</span><span class="p">,</span> <span class="n">buf</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="n">pos</span> <span class="o">+=</span> <span class="mi">188</span> <span class="p">;</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">timestamp</span> <span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">pos</span> <span class="o">=</span> <span class="p">((</span><span class="n">length</span><span class="o">/</span><span class="mi">188</span><span class="p">)</span><span class="o">*</span><span class="mi">188</span><span class="p">)</span> <span class="o">-</span> <span class="mi">188</span> <span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;;)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>           <span class="k">return</span> <span class="n">AV_NOPTS_VALUE</span> <span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="n">buf</span> <span class="o">=</span> <span class="n">address</span> <span class="o">+</span> <span class="n">pos</span> <span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">((</span><span class="n">pcrPid</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">MY_RB16</span><span class="p">(</span><span class="n">buf</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0x1FFF</span><span class="p">)</span> <span class="o">==</span> <span class="n">pcrPid</span><span class="p">)</span> <span class="o">&amp;&amp;</span>  <span class="n">MY_ParsePcr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">timestamp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pcrL</span><span class="p">,</span> <span class="n">buf</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="n">pos</span> <span class="o">-=</span> <span class="mi">188</span> <span class="p">;</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">timestamp</span> <span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">AVFormatContext</span> <span class="o">*</span><span class="n">pFormatCtx</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">i</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">videoStream</span> <span class="p">;</span>
</span><span class='line'> <span class="n">AVPacket</span>        <span class="n">packet</span> <span class="p">;</span>
</span><span class='line'> <span class="n">AVCodecContext</span>  <span class="o">*</span><span class="n">pCodecCtx</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVCodec</span>         <span class="o">*</span><span class="n">pCodec</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVFrame</span>         <span class="o">*</span><span class="n">pFrame</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVFrame</span>         <span class="o">*</span><span class="n">pFrameRGB</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">numBytes</span><span class="p">;</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">char</span>   <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please provide a movie file</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Register all formats and codecs</span>
</span><span class='line'> <span class="n">av_register_all</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Open video file</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">av_open_input_file</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pFormatCtx</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Couldn&#39;t open file</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">//printf(&quot;pFormatCtx-&gt;nb_streams:%d\n&quot;,pFormatCtx-&gt;nb_streams);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Retrieve stream information</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">av_find_stream_info</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Couldn&#39;t find stream information</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Dump information about file onto standard error</span>
</span><span class='line'> <span class="n">dump_format</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">//printf(&quot;pFormatCtx-&gt;nb_streams:%d\n&quot;,pFormatCtx-&gt;nb_streams);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Find the first video stream</span>
</span><span class='line'> <span class="n">videoStream</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="p">;</span>
</span><span class='line'> <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">nb_streams</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">streams</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">codec</span><span class="o">-&gt;</span><span class="n">codec_type</span><span class="o">==</span><span class="n">AVMEDIA_TYPE_VIDEO</span><span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">videoStream</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span> <span class="n">videoStream</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Didn&#39;t find a video stream.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Didn&#39;t find a video stream</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Get a pointer to the codec context for the video stream</span>
</span><span class='line'> <span class="n">pCodecCtx</span><span class="o">=</span><span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">streams</span><span class="p">[</span><span class="n">videoStream</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">codec</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Find the decoder for the video stream</span>
</span><span class='line'> <span class="n">pCodec</span><span class="o">=</span><span class="n">avcodec_find_decoder</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">codec_id</span><span class="p">);</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">pCodec</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unsupported codec!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Codec not found</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'> <span class="c1">// Open codec</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">avcodec_open</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="p">,</span> <span class="n">pCodec</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Could not open codec</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Allocate video frame</span>
</span><span class='line'> <span class="n">pFrame</span><span class="o">=</span><span class="n">avcodec_alloc_frame</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Allocate an AVFrame structure</span>
</span><span class='line'> <span class="n">pFrameRGB</span><span class="o">=</span><span class="n">avcodec_alloc_frame</span><span class="p">();</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">pFrameRGB</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Determine required buffer size and allocate buffer</span>
</span><span class='line'> <span class="n">numBytes</span><span class="o">=</span><span class="n">avpicture_get_size</span><span class="p">(</span><span class="n">PIX_FMT_RGB24</span><span class="p">,</span> <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>           <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'> <span class="n">buffer</span><span class="o">=</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">av_malloc</span><span class="p">(</span><span class="n">numBytes</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="p">));</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Assign appropriate parts of buffer to image planes in pFrameRGB</span>
</span><span class='line'> <span class="c1">// Note that pFrameRGB is an AVFrame, but AVFrame is a superset</span>
</span><span class='line'> <span class="c1">// of AVPicture</span>
</span><span class='line'> <span class="n">avpicture_fill</span><span class="p">((</span><span class="n">AVPicture</span> <span class="o">*</span><span class="p">)</span><span class="n">pFrameRGB</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">PIX_FMT_RGB24</span><span class="p">,</span>
</span><span class='line'>     <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">width</span><span class="p">,</span> <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="n">url_fseek</span><span class="p">(</span> <span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">pb</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">SEEK_SET</span><span class="p">);</span>
</span><span class='line'> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">pktBuf</span><span class="p">[</span><span class="mi">188</span><span class="p">]</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">long</span> <span class="kt">long</span> <span class="n">pcr</span> <span class="p">;</span>
</span><span class='line'> <span class="k">while</span><span class="p">(</span> <span class="n">get_buffer</span><span class="p">(</span> <span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">pb</span><span class="p">,</span> <span class="n">pktBuf</span><span class="p">,</span> <span class="mi">188</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>       <span class="n">pcr</span> <span class="o">=</span> <span class="n">MY_GetPcr</span><span class="p">(</span> <span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">streams</span><span class="p">[</span><span class="n">videoStream</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">,</span> <span class="n">pktBuf</span><span class="p">,</span> <span class="mi">188</span><span class="p">,</span> <span class="mi">0</span> <span class="p">);</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">pcr</span> <span class="o">!=</span> <span class="n">AV_NOPTS_VALUE</span> <span class="p">)</span>
</span><span class='line'>         <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pcr: %lld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">pcr</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Free the RGB image</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">pFrameRGB</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Free the YUV frame</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">pFrame</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Close the codec</span>
</span><span class='line'> <span class="n">avcodec_close</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Close the video file</span>
</span><span class='line'> <span class="n">av_close_input_file</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>實際dump PCR的狀況如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/pcr$ ll
</span><span class='line'>total 195588
</span><span class='line'>drwxrwxr-x 2 bramante bramante      4096 Aug  9 16:06 ./
</span><span class='line'>drwxr-xr-x 4 bramante bramante      4096 Aug  7 21:00 ../
</span><span class='line'>-rwxrw-rw- 1 bramante bramante 200259292 Feb 24  2004 demo.ts*
</span><span class='line'>-rwxrw-rw- 1 bramante bramante      5204 Aug  9 15:59 pcr.c*
</span><span class='line'>bramante@matrix:~/pcr$ gcc -o pcr pcr.c -lavformat
</span><span class='line'>bramante@matrix:~/pcr$ ./pcr demo.ts
</span><span class='line'>Input #0, mpegts, from 'demo.ts':
</span><span class='line'>  Duration: 27:01:37.48, start: 49894.317511, bitrate: 16 kb/s
</span><span class='line'>  Program 1
</span><span class='line'>    Stream #0.3[0x11]: Video: mpeg2video (Main), yuv420p, 1920x1080 [PAR 1:1 DAR 16:9], 15000 kb/s, 31.35 fps, 29.97 tbr, 90k tbn, 59.94 tbc
</span><span class='line'>    Stream #0.2[0x14](eng): Audio: ac3, 48000 Hz, stereo, s16, 384 kb/s
</span><span class='line'>  Program 2
</span><span class='line'>    Stream #0.0[0x21]: Video: mpeg2video (Main), yuv420p, 704x480 [PAR 10:11 DAR 4:3], 3370 kb/s, 35.46 fps, 29.97 tbr, 90k tbn, 59.94 tbc
</span><span class='line'>    Stream #0.1[0x24](eng): Audio: ac3, 48000 Hz, stereo, s16, 384 kb/s
</span><span class='line'>pcr: 4490480379
</span><span class='line'>pcr: 4490485796
</span><span class='line'>pcr: 4490491142
</span><span class='line'>pcr: 4490496559
</span><span class='line'>....
</span><span class='line'>pcr: 4497772096
</span><span class='line'>pcr: 4497777513
</span><span class='line'>pcr: 4497782915
</span><span class='line'>pcr: 4497788276
</span><span class='line'>pcr: 4497793748
</span><span class='line'>bramante@matrix:~/pcr$
</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dump PTS]]></title>
    <link href="http://Bramante.github.io/blog/2015/08/07/dump-pts/"/>
    <updated>2015-08-07T20:47:15+08:00</updated>
    <id>http://Bramante.github.io/blog/2015/08/07/dump-pts</id>
    <content type="html"><![CDATA[<p>利用FFmpeg可以dump出TS file裡的PTS,
以下是範例程式:</p>

<figure class='code'><figcaption><span>pts.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;libavcodec/avcodec.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;libavformat/avformat.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="n">AVFormatContext</span> <span class="o">*</span><span class="n">pFormatCtx</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">i</span> <span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">videoStream</span> <span class="p">;</span>
</span><span class='line'> <span class="n">AVPacket</span>        <span class="n">packet</span> <span class="p">;</span>
</span><span class='line'> <span class="n">AVCodecContext</span>  <span class="o">*</span><span class="n">pCodecCtx</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVCodec</span>         <span class="o">*</span><span class="n">pCodec</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVFrame</span>         <span class="o">*</span><span class="n">pFrame</span><span class="p">;</span>
</span><span class='line'> <span class="n">AVFrame</span>         <span class="o">*</span><span class="n">pFrameRGB</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span>             <span class="n">numBytes</span><span class="p">;</span>
</span><span class='line'> <span class="kt">uint8_t</span>         <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please provide a movie file</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Register all formats and codecs</span>
</span><span class='line'> <span class="n">av_register_all</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Open video file</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">av_open_input_file</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pFormatCtx</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Couldn&#39;t open file</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Retrieve stream information</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">av_find_stream_info</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Couldn&#39;t find stream information</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Dump information about file onto standard error</span>
</span><span class='line'> <span class="n">dump_format</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Find the first video stream</span>
</span><span class='line'> <span class="n">videoStream</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="p">;</span>
</span><span class='line'> <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">nb_streams</span> <span class="p">;</span> <span class="n">i</span> <span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">streams</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">codec</span><span class="o">-&gt;</span><span class="n">codec_type</span><span class="o">==</span><span class="n">AVMEDIA_TYPE_VIDEO</span><span class="p">)</span>
</span><span class='line'>       <span class="p">{</span>
</span><span class='line'>        <span class="n">videoStream</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span><span class="p">(</span> <span class="n">videoStream</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="p">)</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Didn&#39;t find a video stream.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Didn&#39;t find a video stream</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Get a pointer to the codec context for the video stream</span>
</span><span class='line'> <span class="n">pCodecCtx</span><span class="o">=</span><span class="n">pFormatCtx</span><span class="o">-&gt;</span><span class="n">streams</span><span class="p">[</span><span class="n">videoStream</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">codec</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Find the decoder for the video stream</span>
</span><span class='line'> <span class="n">pCodec</span><span class="o">=</span><span class="n">avcodec_find_decoder</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">codec_id</span><span class="p">);</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">pCodec</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unsupported codec!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Codec not found</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'> <span class="c1">// Open codec</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">avcodec_open</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="p">,</span> <span class="n">pCodec</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Could not open codec</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Allocate video frame</span>
</span><span class='line'> <span class="n">pFrame</span><span class="o">=</span><span class="n">avcodec_alloc_frame</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Allocate an AVFrame structure</span>
</span><span class='line'> <span class="n">pFrameRGB</span><span class="o">=</span><span class="n">avcodec_alloc_frame</span><span class="p">();</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="n">pFrameRGB</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Determine required buffer size and allocate buffer</span>
</span><span class='line'> <span class="n">numBytes</span><span class="o">=</span><span class="n">avpicture_get_size</span><span class="p">(</span><span class="n">PIX_FMT_RGB24</span><span class="p">,</span> <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>           <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'> <span class="n">buffer</span><span class="o">=</span><span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">av_malloc</span><span class="p">(</span><span class="n">numBytes</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">uint8_t</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Assign appropriate parts of buffer to image planes in pFrameRGB</span>
</span><span class='line'> <span class="c1">// Note that pFrameRGB is an AVFrame, but AVFrame is a superset</span>
</span><span class='line'> <span class="c1">// of AVPicture</span>
</span><span class='line'> <span class="n">avpicture_fill</span><span class="p">((</span><span class="n">AVPicture</span> <span class="o">*</span><span class="p">)</span><span class="n">pFrameRGB</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">PIX_FMT_RGB24</span><span class="p">,</span>
</span><span class='line'>     <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">width</span><span class="p">,</span> <span class="n">pCodecCtx</span><span class="o">-&gt;</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Read frames</span>
</span><span class='line'> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span>
</span><span class='line'> <span class="k">while</span><span class="p">(</span><span class="n">av_read_packet</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">packet</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>       <span class="c1">// Is this a packet from the video stream?</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">packet</span><span class="p">.</span><span class="n">stream_index</span><span class="o">==</span><span class="n">videoStream</span><span class="p">)</span>
</span><span class='line'>         <span class="p">{</span>             
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">packet</span><span class="p">.</span><span class="n">pts</span> <span class="o">!=</span> <span class="n">AV_NOPTS_VALUE</span> <span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>             <span class="n">printf</span><span class="p">(</span><span class="s">&quot;video pts: %lld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">packet</span><span class="p">.</span><span class="n">pts</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="c1">// Free the packet that was allocated by av_read_frame</span>
</span><span class='line'>       <span class="n">av_free_packet</span><span class="p">(</span><span class="o">&amp;</span><span class="n">packet</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Free the RGB image</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">pFrameRGB</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Free the YUV frame</span>
</span><span class='line'> <span class="n">av_free</span><span class="p">(</span><span class="n">pFrame</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Close the codec</span>
</span><span class='line'> <span class="n">avcodec_close</span><span class="p">(</span><span class="n">pCodecCtx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// Close the video file</span>
</span><span class='line'> <span class="n">av_close_input_file</span><span class="p">(</span><span class="n">pFormatCtx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>實際dump PTS的狀況如下:</p>

<p><font face="sans"></p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bramante@matrix:~/pts$ ll
</span><span class='line'>total 3556
</span><span class='line'>drwxrwxr-x 2 bramante bramante    4096 Aug  7 20:51 ./
</span><span class='line'>drwxr-xr-x 5 bramante bramante    4096 Aug  7 20:32 ../
</span><span class='line'>-rwxrw-rw- 1 bramante bramante 3625204 Jul 21 20:04 demo.ts*
</span><span class='line'>-rwxrw-rw- 1 bramante bramante    2975 Aug  7 20:47 pts.c*
</span><span class='line'>bramante@matrix:~/pts$ gcc -o pts pts.c -lavformat
</span><span class='line'>bramante@matrix:~/pts$ ./pts demo.ts
</span><span class='line'>[mpegts @ 0x1815040] max_analyze_duration reached
</span><span class='line'>Input #0, mpegts, from 'demo.ts':
</span><span class='line'>  Duration: 00:04:15.18, start: 1.400000, bitrate: 113 kb/s
</span><span class='line'>  Program 1
</span><span class='line'>    Metadata:
</span><span class='line'>      service_name    : Service01
</span><span class='line'>      service_provider: Libav
</span><span class='line'>    Stream #0.0[0x100]: Video: mpeg4 (Simple Profile), yuv420p, 640x480 [PAR 1:1 DAR 4:3], 1 fps, 1 tbr, 90k tbn, 1 tbc
</span><span class='line'>    Stream #0.1[0x101]: Audio: aac, 44100 Hz, stereo, s16, 61 kb/s
</span><span class='line'>video pts: 126000
</span><span class='line'>video pts: 216000
</span><span class='line'>video pts: 306000
</span><span class='line'>video pts: 396000
</span><span class='line'>video pts: 486000
</span><span class='line'>video pts: 576000
</span><span class='line'>video pts: 666000
</span><span class='line'>video pts: 756000
</span><span class='line'>video pts: 846000
</span><span class='line'>video pts: 936000
</span><span class='line'>video pts: 1026000
</span><span class='line'>video pts: 1116000
</span><span class='line'>video pts: 1206000
</span><span class='line'>....
</span><span class='line'>video pts: 22806000
</span><span class='line'>video pts: 22896000
</span><span class='line'>video pts: 22986000
</span><span class='line'>video pts: 23076000
</span><span class='line'>bramante@matrix:~/pts$</span></code></pre></td></tr></table></div></figure>


<p></font></p>
]]></content>
  </entry>
  
</feed>
